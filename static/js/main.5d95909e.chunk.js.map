{"version":3,"sources":["components/shared/ConnectionState.tsx","components/AppBar.tsx","redux/reducers/roomReducer.ts","redux/reducers/statusReducer.ts","redux/reducers/alertReducer.ts","redux/reducers/index.ts","redux/store.ts","socket.io/socket.ts","components/CreateRoomForm.tsx","components/RoomsList.tsx","components/shared/Alert.tsx","components/shared/LoadingSpinner.tsx","components/ChatPanel.tsx","App.tsx","index.tsx"],"names":["ConnectionState","state","useSelector","status","socketState","CircularProgress","style","width","height","color","title","MainAppBar","AppBar","position","Toolbar","IconButton","edge","marginRight","aria-label","Typography","variant","flexGrow","roomReducer","action","type","rooms","payload","statusReducer","socketId","loading","currentRoom","participants","messages","alertReducer","alertData","text","initialState","store","createStore","startsWith","SocketService","this","socket","io","port","path","dispatch","on","id","e","setTimeout","room","CreateRoomForm","useState","roomName","setRoomName","name","setName","useDispatch","Paper","elevation","className","gutterBottom","FormControl","TextField","label","onChange","target","value","FormHelperText","marginTop","Button","endIcon","onClick","emit","RoomsList","useEffect","getRoomsInterval","setInterval","clearInterval","marginBottom","List","length","map","ListItem","divider","ListItemAvatar","Avatar","ListItemText","classes","secondary","primary","x","reduce","acc","curr","ListItemSecondaryAction","textAlign","display","margin","Alert","props","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","LoadingSpinner","Backdrop","zIndex","ChatPanel","input","setInput","document","getElementById","scrollIntoView","roomData","i","ListItemIcon","fill","Message","sender","message","placeholder","fullWidth","onKeyDown","key","timestamp","Date","App","registerSocketServerListeners","ReactDOM","render"],"mappings":"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","file":"static/js/main.5d95909e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport SignalCellularConnectedNoInternet0BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet0Bar\";\r\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\r\n\r\nconst ConnectionState = () => {\r\n  const state = useSelector((state: any) => state);\r\n  return state.status.socketState == 0 ? (\r\n    // Connecting..\r\n    <CircularProgress\r\n      style={{ width: 35, height: \"auto\", color: \"#ffc107\" }}\r\n      title=\"Connecting..\"\r\n    />\r\n  ) : state.status.socketState == 1 ? (\r\n    // Connected.\r\n    <span title=\"Connected\">\r\n      <SignalCellular4BarIcon style={{ width: 35, height: \"auto\" }} />\r\n    </span>\r\n  ) : state.status.socketState == 2 ? (\r\n    // Closing the connection..\r\n    <CircularProgress\r\n      style={{ width: 35, height: \"auto\", color: \"#dc3545\" }}\r\n      title=\"Disconnecting..\"\r\n    />\r\n  ) : (\r\n    // Closed..\r\n    <span title=\"Error\">\r\n      <SignalCellularConnectedNoInternet0BarIcon\r\n        style={{ width: 35, height: \"auto\" }}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ConnectionState;\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport ConnectionState from \"./shared/ConnectionState\";\r\n\r\nconst MainAppBar = () => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          style={{ marginRight: 2 }}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n          Chat\r\n        </Typography>\r\n        <ConnectionState />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MainAppBar;\r\n","import { initialState } from \".\";\r\n\r\nconst roomReducer = (state: typeof initialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"rooms/list\":\r\n      return {\r\n        ...state,\r\n        rooms: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default roomReducer;\r\n","import { initialState } from \".\";\r\n\r\nconst statusReducer = (state: typeof initialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"status/setSocketState\":\r\n      return {\r\n        ...state,\r\n        status: { ...state.status, socketState: action.payload },\r\n      };\r\n    case \"status/setSocketId\":\r\n      return {\r\n        ...state,\r\n        status: { ...state.status, socketId: action.payload },\r\n      };\r\n    case \"status/switchLoader\":\r\n      return {\r\n        ...state,\r\n        status: { ...state.status, loading: action.payload },\r\n      };\r\n    case \"status/setCurrentRoom\":\r\n      return {\r\n        ...state,\r\n        status: { ...state.status, currentRoom: action.payload },\r\n      };\r\n    case \"status/currentRoom/setParticipants\":\r\n      return {\r\n        ...state,\r\n        status: {\r\n          ...state.status,\r\n          currentRoom: {\r\n            ...state.status.currentRoom,\r\n            participants: action.payload,\r\n          },\r\n        },\r\n      };\r\n    case \"status/currentRoom/setMessages\":\r\n      return {\r\n        ...state,\r\n        status: {\r\n          ...state.status,\r\n          currentRoom: {\r\n            ...state.status.currentRoom,\r\n            messages: action.payload,\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default statusReducer;\r\n","import { initialState } from \".\";\r\n\r\nconst alertReducer = (state: typeof initialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"alert/error\":\r\n      return {\r\n        ...state,\r\n        alertData: {\r\n          type: \"error\",\r\n          text: action.payload,\r\n        },\r\n      };\r\n    case \"alert/clear\":\r\n      return {\r\n        ...state,\r\n        alertData: { type: \"\", text: \"\" },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default alertReducer;\r\n","import roomReducer from \"./roomReducer\";\r\nimport statusReducer from \"./statusReducer\";\r\nimport alertReducer from \"./alertReducer\";\r\n\r\n/*  WebSocket States:\r\n    WebSocket.CONNECTING\t0\r\n    WebSocket.OPEN\t        1\r\n    WebSocket.CLOSING\t    2\r\n    WebSocket.CLOSED\t    3\r\n*/\r\nconst ANY: any = null;\r\n\r\nexport const initialState = {\r\n  alertData: { type: \"\", text: \"\" },\r\n  status: { socketState: 3, socketId: \"\", loading: false, currentRoom: ANY },\r\n  rooms: [\r\n    // {\r\n    //   name: \"Test Room\",\r\n    //   participants: [\r\n    //     { name: \"Test User 1\", status: { socketState: 1 } },\r\n    //     { name: \"Test User 2\", status: { socketState: 1 } },\r\n    //     { name: \"Test User 3\", status: { socketState: 1 } },\r\n    //     { name: \"Test User 4\", status: { socketState: 1 } },\r\n    //     { name: \"Test User 4\", status: { socketState: 1 } },\r\n    //     { name: \"Test User 4\", status: { socketState: 1 } },\r\n    //     { name: \"Test User 4\", status: { socketState: 1 } },\r\n    //   ],\r\n    //   messages: [{ text: \"Hi!\", timestamp: `new Date()`, sender: `socket.id`, id : int}],\r\n    // },\r\n  ],\r\n};\r\n\r\nexport default function rootReducer(state = initialState, action: any) {\r\n  if (action.type.startsWith(\"status\")) return statusReducer(state, action);\r\n  else if (action.type.startsWith(\"rooms\")) return roomReducer(state, action);\r\n  else if (action.type.startsWith(\"alert\")) return alertReducer(state, action);\r\n  else return state;\r\n}\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import { Socket } from \"socket.io-client\";\r\nimport { io } from \"socket.io-client\";\r\nimport store from \"../redux/store\";\r\n\r\nclass SocketService {\r\n  static socket: Socket;\r\n  static registerSocketServerListeners() {\r\n    this.socket = io(\"https://hjjinx.live\", {\r\n      port: \"80\",\r\n      path: \"/api/chat-app/\",\r\n    });\r\n    store.dispatch({ type: \"status/setSocketState\", payload: 0 });\r\n    this.socket.on(\"connect\", () => {\r\n      store.dispatch({ type: \"status/setSocketId\", payload: this.socket.id });\r\n      store.dispatch({ type: \"status/setSocketState\", payload: 1 });\r\n    });\r\n    this.socket.on(\"disconnect\", () => {\r\n      store.dispatch({ type: \"status/setSocketState\", payload: 3 });\r\n    });\r\n    this.socket.on(\"room/list\", (e: any) => {\r\n      store.dispatch({ type: \"rooms/list\", payload: e.rooms });\r\n    });\r\n    this.socket.on(\"error/roomAlreadyExists\", (e: any) => {\r\n      store.dispatch({\r\n        type: \"alert/error\",\r\n        payload: \"Room Already Exists! Please choose another room name.\",\r\n      });\r\n      store.dispatch({ type: \"status/switchLoader\", payload: false });\r\n      setTimeout(() => {\r\n        store.dispatch({ type: \"alert/clear\" });\r\n      }, 2000);\r\n    });\r\n\r\n    this.socket.on(\"room/joined\", (e: any) => {\r\n      store.dispatch({ type: \"status/setCurrentRoom\", payload: e.room });\r\n      store.dispatch({ type: \"status/switchLoader\", payload: false });\r\n    });\r\n\r\n    this.socket.on(\"room/participantsUpdate\", (e: any) => {\r\n      store.dispatch({\r\n        type: \"status/currentRoom/setParticipants\",\r\n        payload: e,\r\n      });\r\n    });\r\n\r\n    this.socket.on(\"room/messagesUpdate\", (e: any) => {\r\n      store.dispatch({\r\n        type: \"status/currentRoom/setMessages\",\r\n        payload: e,\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nnew SocketService();\r\n\r\nexport default SocketService;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport SocketService from \"../socket.io/socket\";\r\n\r\nconst CreateRoomForm = () => {\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const createRoom = () => {\r\n    if (name == \"\" || roomName == \"\") {\r\n      dispatch({\r\n        type: \"alert/error\",\r\n        payload: \"Please enter both your name and room name\",\r\n      });\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: \"alert/clear\",\r\n        });\r\n      }, 2000);\r\n      return;\r\n    }\r\n    dispatch({ type: \"status/switchLoader\", payload: true });\r\n    SocketService.socket.emit(\"room/create\", { name, roomName });\r\n  };\r\n  return (\r\n    <Paper elevation={3} className=\"createRoomForm\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Create a New Chat Room\r\n      </Typography>\r\n      <FormControl className=\"createRoomForm-formControl\">\r\n        <TextField\r\n          id=\"createRoomForm-name\"\r\n          label=\"Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n        />\r\n        <FormHelperText id=\"createRoomForm-nameHelper\">\r\n          Your name will be displayed to everyone that is in the same room as\r\n          you.\r\n        </FormHelperText>\r\n        <TextField\r\n          style={{ marginTop: 10 }}\r\n          id=\"createRoomForm-room\"\r\n          label=\"Room Name\"\r\n          value={roomName}\r\n          onChange={(e) => setRoomName(e.target.value)}\r\n        />\r\n        <FormHelperText id=\"createRoomForm-roomHelper\">\r\n          Room name will be displayed in the 'Join a Room' section\r\n        </FormHelperText>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={\"createRoomForm-createButton\"}\r\n          endIcon={<AddCircleIcon />}\r\n          onClick={createRoom}\r\n        >\r\n          Create\r\n        </Button>\r\n      </FormControl>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CreateRoomForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport WbIncandescentIcon from \"@material-ui/icons/WbIncandescent\";\r\nimport SocketService from \"../socket.io/socket\";\r\n\r\nconst RoomsList = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const state = useSelector((state: any) => state);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let getRoomsInterval = setInterval(() => {\r\n      SocketService.socket?.emit(\"GET_room/list\");\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(getRoomsInterval);\r\n    };\r\n  }, []);\r\n  const renderListItem = (room: any) => (\r\n    <div className=\"joinRoomForm-listItem\">\r\n      <ListItem divider={true}>\r\n        <ListItemAvatar>\r\n          <Avatar />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          title={room.participants.length + \" Participants\"}\r\n          classes={{ secondary: \"ListItem-MuiListItemText-secondary\" }}\r\n          primary={room.name}\r\n          secondary={room.participants\r\n            .map((x: any) => x.name)\r\n            .reduce((acc: any, curr: any) => acc + \", \" + curr)}\r\n        />\r\n        <ListItemSecondaryAction\r\n          title=\"Join Room\"\r\n          onClick={() => {\r\n            if (name == \"\") {\r\n              dispatch({\r\n                type: \"alert/error\",\r\n                payload: \"Please enter your name\",\r\n              });\r\n              setTimeout(() => {\r\n                dispatch({\r\n                  type: \"alert/clear\",\r\n                });\r\n              }, 2000);\r\n              return;\r\n            }\r\n            dispatch({ type: \"status/switchLoader\", payload: true });\r\n            SocketService.socket.emit(\"room/join\", { name, room });\r\n            // dispatch({ type: \"room/join\", payload: room });\r\n          }}\r\n        >\r\n          <IconButton edge=\"end\" aria-label=\"comments\">\r\n            <GroupAddIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Paper elevation={3} className=\"joinRoomForm\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Join an Existing Chat Room\r\n      </Typography>\r\n      <FormControl\r\n        className=\"RoomsList-formControl\"\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        <TextField\r\n          id=\"RoomsList-name\"\r\n          label=\"Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n        />\r\n        <FormHelperText id=\"RoomsList-nameHelper\">\r\n          Your name will be displayed to everyone that is in the same room as\r\n          you.\r\n        </FormHelperText>\r\n      </FormControl>\r\n      {/* <h2 className=\"createRoomForm-heading\">Join an Existing Chat Room</h2> */}\r\n      <List className=\"joinRoomForm-list\">\r\n        {state.rooms.length > 0 ? (\r\n          state.rooms.map(renderListItem)\r\n        ) : (\r\n          <div style={{ textAlign: \"center\", marginTop: 25 }}>\r\n            <WbIncandescentIcon\r\n              style={{\r\n                width: 100,\r\n                height: \"auto\",\r\n                display: \"block\",\r\n                margin: \"auto\",\r\n              }}\r\n            ></WbIncandescentIcon>{\" \"}\r\n            <Typography\r\n              variant=\"h5\"\r\n              gutterBottom\r\n              style={{ margin: \"10px 10%\" }}\r\n            >\r\n              There are no rooms available. Please create one using the above\r\n              form\r\n            </Typography>\r\n          </div>\r\n        )}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RoomsList;\r\n","import React from \"react\";\r\n\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst Alert = (props: any) => {\r\n  return (\r\n    <Snackbar\r\n      open={props.alertData.text != \"\"}\r\n      style={{}}\r\n      autoHideDuration={6000}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      key={1}\r\n    >\r\n      <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\r\n        {props.alertData.text}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { Backdrop, CircularProgress } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <Backdrop open={true} style={{ zIndex: 1, color: \"#fff\" }}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ChatFeed, Message } from \"react-chat-ui\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport SocketService from \"../socket.io/socket\";\r\n\r\nconst ChatPanel = (props: any) => {\r\n  const state = useSelector((state: any) => state);\r\n  const [input, setInput] = useState(\"\");\r\n  const sendMessage = (e: any) => {\r\n    if (e.key == \"Enter\") {\r\n      if (input == \"\") return;\r\n\r\n      SocketService.socket.emit(\"room/newMessage\", {\r\n        text: input,\r\n        id: state.status.currentRoom.name,\r\n        timestamp: new Date(),\r\n      });\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"chat-panel\")?.scrollIntoView(false);\r\n  }, [state.status.currentRoom.messages]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"chatPanel\">\r\n        <div className=\"chatPanel-leftPanel\">\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{ margin: \"10px auto 5px\", textAlign: \"center\" }}\r\n          >\r\n            {props.roomData.participants.length} Participants\r\n          </Typography>\r\n          <span className=\"chatPanel-participantList-divider\"></span>\r\n          <List className=\"chatPanel-participantList\">\r\n            {props.roomData.participants.map((x: any, i: number) => {\r\n              return (\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <PersonIcon\r\n                      style={{\r\n                        fill: x.color,\r\n                        width: 27,\r\n                        height: \"auto\",\r\n                      }}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={x.name} secondary={\"Online\"} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div className=\"chatPanel-rightPanel\">\r\n          <div className=\"chatPanel-chatSection\">\r\n            <ChatFeed\r\n              messages={state.status.currentRoom.messages.map(\r\n                (x: any) =>\r\n                  new Message({\r\n                    id: x.sender == state.status.socketId ? 0 : 1,\r\n                    message: x.text,\r\n                  })\r\n              )}\r\n            ></ChatFeed>\r\n          </div>\r\n          <div className=\"chatPanel-inputSection\">\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              placeholder=\"Type a Message\"\r\n              fullWidth\r\n              onChange={(e) => setInput(e.target.value)}\r\n              value={input}\r\n              onKeyDown={sendMessage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPanel;\r\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport MainAppBar from \"./components/AppBar\";\nimport SocketService from \"./socket.io/socket\";\nimport CreateRoomForm from \"./components/CreateRoomForm\";\nimport RoomsList from \"./components/RoomsList\";\nimport Alert from \"./components/shared/Alert\";\nimport LoadingSpinner from \"./components/shared/LoadingSpinner\";\nimport ChatPanel from \"./components/ChatPanel\";\n\nconst App = () => {\n  const state = useSelector((state: any) => state);\n  useEffect(() => {\n    SocketService.registerSocketServerListeners();\n  }, []);\n  return (\n    <div className=\"main\">\n      <Alert alertData={state.alertData}></Alert>\n      {state.status.loading && <LoadingSpinner></LoadingSpinner>}\n\n      <MainAppBar></MainAppBar>\n\n      {state.status.currentRoom ? (\n        <>\n          <ChatPanel roomData={state.status.currentRoom}></ChatPanel>\n        </>\n      ) : (\n        <>\n          <CreateRoomForm></CreateRoomForm>\n          <RoomsList></RoomsList>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}