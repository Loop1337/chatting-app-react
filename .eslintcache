[{"D:\\code\\ChitChat\\chitchat\\src\\index.tsx":"1","D:\\code\\ChitChat\\chitchat\\src\\App.tsx":"2","D:\\code\\ChitChat\\chitchat\\src\\components\\AppBar.tsx":"3","D:\\code\\ChitChat\\chitchat\\src\\socket.io\\socket.ts":"4","D:\\code\\ChitChat\\chitchat\\src\\redux\\store.ts":"5","D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\ConnectionState.tsx":"6","D:\\code\\ChitChat\\chitchat\\src\\components\\CreateRoomForm.tsx":"7","D:\\code\\ChitChat\\chitchat\\src\\components\\RoomsList.tsx":"8","D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\Alert.tsx":"9","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\statusReducer.ts":"10","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\roomReducer.ts":"11","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\index.ts":"12","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\alertReducer.ts":"13","D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\LoadingSpinner.tsx":"14","D:\\code\\ChitChat\\chitchat\\src\\components\\ChatPanel.tsx":"15"},{"size":293,"mtime":1607786908895,"results":"16","hashOfConfig":"17"},{"size":1079,"mtime":1607869210677,"results":"18","hashOfConfig":"17"},{"size":702,"mtime":1607836659783,"results":"19","hashOfConfig":"17"},{"size":1576,"mtime":1607873549472,"results":"20","hashOfConfig":"17"},{"size":145,"mtime":1607847228178,"results":"21","hashOfConfig":"17"},{"size":1187,"mtime":1607830462423,"results":"22","hashOfConfig":"17"},{"size":2241,"mtime":1607868641450,"results":"23","hashOfConfig":"17"},{"size":3838,"mtime":1607871779278,"results":"24","hashOfConfig":"17"},{"size":534,"mtime":1607845194589,"results":"25","hashOfConfig":"17"},{"size":1172,"mtime":1607873471739,"results":"26","hashOfConfig":"17"},{"size":307,"mtime":1607873239612,"results":"27","hashOfConfig":"17"},{"size":1418,"mtime":1607873519753,"results":"28","hashOfConfig":"17"},{"size":485,"mtime":1607868537910,"results":"29","hashOfConfig":"17"},{"size":314,"mtime":1607869217199,"results":"30","hashOfConfig":"17"},{"size":2060,"mtime":1607873080356,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ot24lb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\ChitChat\\chitchat\\src\\index.tsx",[],["66","67"],"D:\\code\\ChitChat\\chitchat\\src\\App.tsx",[],"D:\\code\\ChitChat\\chitchat\\src\\components\\AppBar.tsx",[],"D:\\code\\ChitChat\\chitchat\\src\\socket.io\\socket.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\store.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\ConnectionState.tsx",["68","69","70"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport SignalCellularConnectedNoInternet0BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet0Bar\";\r\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\r\n\r\nconst ConnectionState = () => {\r\n  const state = useSelector((state: any) => state);\r\n  return state.status.socketState == 0 ? (\r\n    // Connecting..\r\n    <CircularProgress\r\n      style={{ width: 35, height: \"auto\", color: \"#ffc107\" }}\r\n      title=\"Connecting..\"\r\n    />\r\n  ) : state.status.socketState == 1 ? (\r\n    // Connected.\r\n    <span title=\"Connected\">\r\n      <SignalCellular4BarIcon style={{ width: 35, height: \"auto\" }} />\r\n    </span>\r\n  ) : state.status.socketState == 2 ? (\r\n    // Closing the connection..\r\n    <CircularProgress\r\n      style={{ width: 35, height: \"auto\", color: \"#dc3545\" }}\r\n      title=\"Disconnecting..\"\r\n    />\r\n  ) : (\r\n    // Closed..\r\n    <span title=\"Error\">\r\n      <SignalCellularConnectedNoInternet0BarIcon\r\n        style={{ width: 35, height: \"auto\" }}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ConnectionState;\r\n","D:\\code\\ChitChat\\chitchat\\src\\components\\CreateRoomForm.tsx",["71","72"],"import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport SocketService from \"../socket.io/socket\";\r\n\r\nconst CreateRoomForm = () => {\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const createRoom = () => {\r\n    if (name == \"\" || roomName == \"\") {\r\n      dispatch({\r\n        type: \"alert/error\",\r\n        payload: \"Please enter both your name and room name\",\r\n      });\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: \"alert/clear\",\r\n        });\r\n      }, 2000);\r\n      return;\r\n    }\r\n    dispatch({ type: \"status/switchLoader\", payload: true });\r\n    SocketService.socket.emit(\"room/create\", { name, roomName });\r\n  };\r\n  return (\r\n    <Paper elevation={3} className=\"createRoomForm\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Create a New Chat Room\r\n      </Typography>\r\n      <FormControl className=\"createRoomForm-formControl\">\r\n        <TextField\r\n          id=\"createRoomForm-name\"\r\n          label=\"Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n        />\r\n        <FormHelperText id=\"createRoomForm-nameHelper\">\r\n          Your name will be displayed to everyone that is in the same room as\r\n          you.\r\n        </FormHelperText>\r\n        <TextField\r\n          style={{ marginTop: 10 }}\r\n          id=\"createRoomForm-room\"\r\n          label=\"Room Name\"\r\n          value={roomName}\r\n          onChange={(e) => setRoomName(e.target.value)}\r\n        />\r\n        <FormHelperText id=\"createRoomForm-roomHelper\">\r\n          Room name will be displayed in the 'Join a Room' section\r\n        </FormHelperText>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={\"createRoomForm-createButton\"}\r\n          endIcon={<AddCircleIcon />}\r\n          onClick={createRoom}\r\n        >\r\n          Create\r\n        </Button>\r\n      </FormControl>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CreateRoomForm;\r\n","D:\\code\\ChitChat\\chitchat\\src\\components\\RoomsList.tsx",["73","74"],"D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\Alert.tsx",["75"],"import React from \"react\";\r\n\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst Alert = (props: any) => {\r\n  return (\r\n    <Snackbar\r\n      open={props.alertData.text != \"\"}\r\n      style={{}}\r\n      autoHideDuration={6000}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      key={1}\r\n    >\r\n      <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\r\n        {props.alertData.text}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\statusReducer.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\roomReducer.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\index.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\alertReducer.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\LoadingSpinner.tsx",[],"D:\\code\\ChitChat\\chitchat\\src\\components\\ChatPanel.tsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":10,"column":35,"nodeType":"82","messageId":"83","endLine":10,"endColumn":37},{"ruleId":"80","severity":1,"message":"81","line":16,"column":32,"nodeType":"82","messageId":"83","endLine":16,"endColumn":34},{"ruleId":"80","severity":1,"message":"81","line":21,"column":32,"nodeType":"82","messageId":"83","endLine":21,"endColumn":34},{"ruleId":"80","severity":1,"message":"81","line":21,"column":14,"nodeType":"82","messageId":"83","endLine":21,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":21,"column":32,"nodeType":"82","messageId":"83","endLine":21,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":13,"column":3,"nodeType":"86","messageId":"87","endLine":13,"endColumn":9},{"ruleId":"80","severity":1,"message":"81","line":51,"column":22,"nodeType":"82","messageId":"83","endLine":51,"endColumn":24},{"ruleId":"80","severity":1,"message":"88","line":9,"column":34,"nodeType":"82","messageId":"83","endLine":9,"endColumn":36},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]