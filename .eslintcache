[{"D:\\code\\ChitChat\\chitchat\\src\\index.tsx":"1","D:\\code\\ChitChat\\chitchat\\src\\App.tsx":"2","D:\\code\\ChitChat\\chitchat\\src\\components\\AppBar.tsx":"3","D:\\code\\ChitChat\\chitchat\\src\\socket.io\\socket.ts":"4","D:\\code\\ChitChat\\chitchat\\src\\redux\\store.ts":"5","D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\ConnectionState.tsx":"6","D:\\code\\ChitChat\\chitchat\\src\\components\\CreateRoomForm.tsx":"7","D:\\code\\ChitChat\\chitchat\\src\\components\\RoomsList.tsx":"8","D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\Alert.tsx":"9","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\statusReducer.ts":"10","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\roomReducer.ts":"11","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\index.ts":"12","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\alertReducer.ts":"13","D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\LoadingSpinner.tsx":"14","D:\\code\\ChitChat\\chitchat\\src\\components\\ChatPanel.tsx":"15"},{"size":293,"mtime":1607786908895,"results":"16","hashOfConfig":"17"},{"size":1079,"mtime":1607869210677,"results":"18","hashOfConfig":"17"},{"size":702,"mtime":1607836659783,"results":"19","hashOfConfig":"17"},{"size":1784,"mtime":1609339529995,"results":"20","hashOfConfig":"17"},{"size":145,"mtime":1607847228178,"results":"21","hashOfConfig":"17"},{"size":1187,"mtime":1607830462423,"results":"22","hashOfConfig":"17"},{"size":2241,"mtime":1607868641450,"results":"23","hashOfConfig":"17"},{"size":3838,"mtime":1607871779278,"results":"24","hashOfConfig":"17"},{"size":534,"mtime":1607845194589,"results":"25","hashOfConfig":"17"},{"size":1332,"mtime":1609339625044,"results":"26","hashOfConfig":"17"},{"size":307,"mtime":1607873239612,"results":"27","hashOfConfig":"17"},{"size":1450,"mtime":1609339461604,"results":"28","hashOfConfig":"17"},{"size":485,"mtime":1607868537910,"results":"29","hashOfConfig":"17"},{"size":314,"mtime":1607869217199,"results":"30","hashOfConfig":"17"},{"size":2559,"mtime":1609339740042,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ot24lb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\code\\ChitChat\\chitchat\\src\\index.tsx",[],["67","68"],"D:\\code\\ChitChat\\chitchat\\src\\App.tsx",[],"D:\\code\\ChitChat\\chitchat\\src\\components\\AppBar.tsx",[],"D:\\code\\ChitChat\\chitchat\\src\\socket.io\\socket.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\store.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\ConnectionState.tsx",["69","70","71"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport SignalCellularConnectedNoInternet0BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet0Bar\";\r\nimport SignalCellular4BarIcon from \"@material-ui/icons/SignalCellular4Bar\";\r\n\r\nconst ConnectionState = () => {\r\n  const state = useSelector((state: any) => state);\r\n  return state.status.socketState == 0 ? (\r\n    // Connecting..\r\n    <CircularProgress\r\n      style={{ width: 35, height: \"auto\", color: \"#ffc107\" }}\r\n      title=\"Connecting..\"\r\n    />\r\n  ) : state.status.socketState == 1 ? (\r\n    // Connected.\r\n    <span title=\"Connected\">\r\n      <SignalCellular4BarIcon style={{ width: 35, height: \"auto\" }} />\r\n    </span>\r\n  ) : state.status.socketState == 2 ? (\r\n    // Closing the connection..\r\n    <CircularProgress\r\n      style={{ width: 35, height: \"auto\", color: \"#dc3545\" }}\r\n      title=\"Disconnecting..\"\r\n    />\r\n  ) : (\r\n    // Closed..\r\n    <span title=\"Error\">\r\n      <SignalCellularConnectedNoInternet0BarIcon\r\n        style={{ width: 35, height: \"auto\" }}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ConnectionState;\r\n","D:\\code\\ChitChat\\chitchat\\src\\components\\CreateRoomForm.tsx",["72","73"],"import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport SocketService from \"../socket.io/socket\";\r\n\r\nconst CreateRoomForm = () => {\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const createRoom = () => {\r\n    if (name == \"\" || roomName == \"\") {\r\n      dispatch({\r\n        type: \"alert/error\",\r\n        payload: \"Please enter both your name and room name\",\r\n      });\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: \"alert/clear\",\r\n        });\r\n      }, 2000);\r\n      return;\r\n    }\r\n    dispatch({ type: \"status/switchLoader\", payload: true });\r\n    SocketService.socket.emit(\"room/create\", { name, roomName });\r\n  };\r\n  return (\r\n    <Paper elevation={3} className=\"createRoomForm\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Create a New Chat Room\r\n      </Typography>\r\n      <FormControl className=\"createRoomForm-formControl\">\r\n        <TextField\r\n          id=\"createRoomForm-name\"\r\n          label=\"Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n        />\r\n        <FormHelperText id=\"createRoomForm-nameHelper\">\r\n          Your name will be displayed to everyone that is in the same room as\r\n          you.\r\n        </FormHelperText>\r\n        <TextField\r\n          style={{ marginTop: 10 }}\r\n          id=\"createRoomForm-room\"\r\n          label=\"Room Name\"\r\n          value={roomName}\r\n          onChange={(e) => setRoomName(e.target.value)}\r\n        />\r\n        <FormHelperText id=\"createRoomForm-roomHelper\">\r\n          Room name will be displayed in the 'Join a Room' section\r\n        </FormHelperText>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={\"createRoomForm-createButton\"}\r\n          endIcon={<AddCircleIcon />}\r\n          onClick={createRoom}\r\n        >\r\n          Create\r\n        </Button>\r\n      </FormControl>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CreateRoomForm;\r\n","D:\\code\\ChitChat\\chitchat\\src\\components\\RoomsList.tsx",["74","75"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport WbIncandescentIcon from \"@material-ui/icons/WbIncandescent\";\r\nimport SocketService from \"../socket.io/socket\";\r\n\r\nconst RoomsList = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const state = useSelector((state: any) => state);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let getRoomsInterval = setInterval(() => {\r\n      SocketService.socket?.emit(\"GET_room/list\");\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(getRoomsInterval);\r\n    };\r\n  }, []);\r\n  const renderListItem = (room: any) => (\r\n    <div className=\"joinRoomForm-listItem\">\r\n      <ListItem divider={true}>\r\n        <ListItemAvatar>\r\n          <Avatar />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          title={room.participants.length + \" Participants\"}\r\n          classes={{ secondary: \"ListItem-MuiListItemText-secondary\" }}\r\n          primary={room.name}\r\n          secondary={room.participants\r\n            .map((x: any) => x.name)\r\n            .reduce((acc: any, curr: any) => acc + \", \" + curr)}\r\n        />\r\n        <ListItemSecondaryAction\r\n          title=\"Join Room\"\r\n          onClick={() => {\r\n            if (name == \"\") {\r\n              dispatch({\r\n                type: \"alert/error\",\r\n                payload: \"Please enter your name\",\r\n              });\r\n              setTimeout(() => {\r\n                dispatch({\r\n                  type: \"alert/clear\",\r\n                });\r\n              }, 2000);\r\n              return;\r\n            }\r\n            dispatch({ type: \"status/switchLoader\", payload: true });\r\n            SocketService.socket.emit(\"room/join\", { name, room });\r\n            // dispatch({ type: \"room/join\", payload: room });\r\n          }}\r\n        >\r\n          <IconButton edge=\"end\" aria-label=\"comments\">\r\n            <GroupAddIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Paper elevation={3} className=\"joinRoomForm\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Join an Existing Chat Room\r\n      </Typography>\r\n      <FormControl\r\n        className=\"RoomsList-formControl\"\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        <TextField\r\n          id=\"RoomsList-name\"\r\n          label=\"Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          value={name}\r\n        />\r\n        <FormHelperText id=\"RoomsList-nameHelper\">\r\n          Your name will be displayed to everyone that is in the same room as\r\n          you.\r\n        </FormHelperText>\r\n      </FormControl>\r\n      {/* <h2 className=\"createRoomForm-heading\">Join an Existing Chat Room</h2> */}\r\n      <List className=\"joinRoomForm-list\">\r\n        {state.rooms.length > 0 ? (\r\n          state.rooms.map(renderListItem)\r\n        ) : (\r\n          <div style={{ textAlign: \"center\", marginTop: 25 }}>\r\n            <WbIncandescentIcon\r\n              style={{\r\n                width: 100,\r\n                height: \"auto\",\r\n                display: \"block\",\r\n                margin: \"auto\",\r\n              }}\r\n            ></WbIncandescentIcon>{\" \"}\r\n            <Typography\r\n              variant=\"h5\"\r\n              gutterBottom\r\n              style={{ margin: \"10px 10%\" }}\r\n            >\r\n              There are no rooms available. Please create one using the above\r\n              form\r\n            </Typography>\r\n          </div>\r\n        )}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RoomsList;\r\n","D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\Alert.tsx",["76"],"import React from \"react\";\r\n\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst Alert = (props: any) => {\r\n  return (\r\n    <Snackbar\r\n      open={props.alertData.text != \"\"}\r\n      style={{}}\r\n      autoHideDuration={6000}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n      key={1}\r\n    >\r\n      <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\r\n        {props.alertData.text}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\statusReducer.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\roomReducer.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\index.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\reducers\\alertReducer.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\components\\shared\\LoadingSpinner.tsx",[],"D:\\code\\ChitChat\\chitchat\\src\\components\\ChatPanel.tsx",["77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":10,"column":35,"nodeType":"85","messageId":"86","endLine":10,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":16,"column":32,"nodeType":"85","messageId":"86","endLine":16,"endColumn":34},{"ruleId":"83","severity":1,"message":"84","line":21,"column":32,"nodeType":"85","messageId":"86","endLine":21,"endColumn":34},{"ruleId":"83","severity":1,"message":"84","line":21,"column":14,"nodeType":"85","messageId":"86","endLine":21,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":21,"column":32,"nodeType":"85","messageId":"86","endLine":21,"endColumn":34},{"ruleId":"87","severity":1,"message":"88","line":13,"column":3,"nodeType":"89","messageId":"90","endLine":13,"endColumn":9},{"ruleId":"83","severity":1,"message":"84","line":51,"column":22,"nodeType":"85","messageId":"86","endLine":51,"endColumn":24},{"ruleId":"83","severity":1,"message":"91","line":9,"column":34,"nodeType":"85","messageId":"86","endLine":9,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":19,"column":15,"nodeType":"85","messageId":"86","endLine":19,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":64,"column":34,"nodeType":"85","messageId":"86","endLine":64,"endColumn":36},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]