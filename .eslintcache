[{"D:\\code\\ChitChat\\chitchat\\src\\index.tsx":"1","D:\\code\\ChitChat\\chitchat\\src\\App.tsx":"2","D:\\code\\ChitChat\\chitchat\\src\\components\\AppBar.tsx":"3","D:\\code\\ChitChat\\chitchat\\src\\socket.io\\socket.ts":"4","D:\\code\\ChitChat\\chitchat\\src\\redux\\store.ts":"5","D:\\code\\ChitChat\\chitchat\\src\\redux\\reducer.ts":"6"},{"size":293,"mtime":1607786908895,"results":"7","hashOfConfig":"8"},{"size":664,"mtime":1607789650385,"results":"9","hashOfConfig":"8"},{"size":1861,"mtime":1607789593938,"results":"10","hashOfConfig":"8"},{"size":203,"mtime":1607785404851,"results":"11","hashOfConfig":"8"},{"size":144,"mtime":1607786903697,"results":"12","hashOfConfig":"8"},{"size":493,"mtime":1607789626705,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ot24lb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\code\\ChitChat\\chitchat\\src\\index.tsx",[],["28","29"],"D:\\code\\ChitChat\\chitchat\\src\\App.tsx",["30"],"D:\\code\\ChitChat\\chitchat\\src\\components\\AppBar.tsx",["31","32","33","34","35"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst MainAppBar = () => {\r\n  const state = useSelector((state: any) => state);\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          style={{ marginRight: 2 }}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n          Chat\r\n        </Typography>\r\n        {state.status.socketState == 0 ? (\r\n          // Connecting..\r\n          <CircularProgress\r\n            style={{ width: 35, height: \"auto\", color: \"#ffc107\" }}\r\n          />\r\n        ) : state.status.socketState == 1 ? (\r\n          // Connected.\r\n          <CheckIcon style={{ width: 35, height: \"auto\", color: \"#28a745\" }} />\r\n        ) : state.status.socketState == 2 ? (\r\n          // Closing the connection..\r\n          <CircularProgress\r\n            style={{ width: 35, height: \"auto\", color: \"#dc3545\" }}\r\n          />\r\n        ) : (\r\n          // Closed..\r\n          <ErrorIcon\r\n            htmlColor=\"#dc3545\"\r\n            style={{ width: 35, height: \"auto\" }}\r\n          />\r\n        )}\r\n        {/* <Button color=\"inherit\">Login</Button> */}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MainAppBar;\r\n","D:\\code\\ChitChat\\chitchat\\src\\socket.io\\socket.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\store.ts",[],"D:\\code\\ChitChat\\chitchat\\src\\redux\\reducer.ts",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":17,"column":6,"nodeType":"42","endLine":17,"endColumn":8,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":8,"nodeType":"46","messageId":"47","endLine":6,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":10,"column":8,"nodeType":"46","messageId":"47","endLine":10,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":31,"column":35,"nodeType":"51","messageId":"52","endLine":31,"endColumn":37},{"ruleId":"49","severity":1,"message":"50","line":36,"column":38,"nodeType":"51","messageId":"52","endLine":36,"endColumn":40},{"ruleId":"49","severity":1,"message":"50","line":39,"column":38,"nodeType":"51","messageId":"52","endLine":39,"endColumn":40},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["55"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CloseIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [dispatch]",{"range":"58","text":"59"},[566,568],"[dispatch]"]